/**
 * generated by Xtext 2.14.0-SNAPSHOT
 */
package ox.xtext.peweb.question.q.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import ox.xtext.peweb.question.q.MultipleChoiceAnswer;
import ox.xtext.peweb.question.q.MultipleChoiceQuestion;
import ox.xtext.peweb.question.q.QPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Multiple Choice Question</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ox.xtext.peweb.question.q.impl.MultipleChoiceQuestionImpl#getAnswers <em>Answers</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MultipleChoiceQuestionImpl extends QuestionImpl implements MultipleChoiceQuestion
{
  /**
   * The cached value of the '{@link #getAnswers() <em>Answers</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnswers()
   * @generated
   * @ordered
   */
  protected EList<MultipleChoiceAnswer> answers;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MultipleChoiceQuestionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return QPackage.Literals.MULTIPLE_CHOICE_QUESTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<MultipleChoiceAnswer> getAnswers()
  {
    if (answers == null)
    {
      answers = new EObjectContainmentEList<MultipleChoiceAnswer>(MultipleChoiceAnswer.class, this, QPackage.MULTIPLE_CHOICE_QUESTION__ANSWERS);
    }
    return answers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case QPackage.MULTIPLE_CHOICE_QUESTION__ANSWERS:
        return ((InternalEList<?>)getAnswers()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case QPackage.MULTIPLE_CHOICE_QUESTION__ANSWERS:
        return getAnswers();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case QPackage.MULTIPLE_CHOICE_QUESTION__ANSWERS:
        getAnswers().clear();
        getAnswers().addAll((Collection<? extends MultipleChoiceAnswer>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case QPackage.MULTIPLE_CHOICE_QUESTION__ANSWERS:
        getAnswers().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case QPackage.MULTIPLE_CHOICE_QUESTION__ANSWERS:
        return answers != null && !answers.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //MultipleChoiceQuestionImpl
