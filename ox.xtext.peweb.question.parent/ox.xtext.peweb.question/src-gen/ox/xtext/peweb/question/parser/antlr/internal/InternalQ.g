/*
 * generated by Xtext 2.14.0-SNAPSHOT
 */
grammar InternalQ;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ox.xtext.peweb.question.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ox.xtext.peweb.question.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ox.xtext.peweb.question.services.QGrammarAccess;

}

@parser::members {

 	private QGrammarAccess grammarAccess;

    public InternalQParser(TokenStream input, QGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Questionnaire";
   	}

   	@Override
   	protected QGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleQuestionnaire
entryRuleQuestionnaire returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuestionnaireRule()); }
	iv_ruleQuestionnaire=ruleQuestionnaire
	{ $current=$iv_ruleQuestionnaire.current; }
	EOF;

// Rule Questionnaire
ruleQuestionnaire returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getQuestionnaireAccess().getSectionsSectionParserRuleCall_0());
			}
			lv_sections_0_0=ruleSection
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getQuestionnaireRule());
				}
				add(
					$current,
					"sections",
					lv_sections_0_0,
					"ox.xtext.peweb.question.Q.Section");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleSection
entryRuleSection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSectionRule()); }
	iv_ruleSection=ruleSection
	{ $current=$iv_ruleSection.current; }
	EOF;

// Rule Section
ruleSection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Section'
		{
			newLeafNode(otherlv_0, grammarAccess.getSectionAccess().getSectionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSectionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSectionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSectionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSectionAccess().getSectionContentsSectionContentsParserRuleCall_3_0());
				}
				lv_sectionContents_3_0=ruleSectionContents
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSectionRule());
					}
					add(
						$current,
						"sectionContents",
						lv_sectionContents_3_0,
						"ox.xtext.peweb.question.Q.SectionContents");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSectionAccess().getRightCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSectionAccess().getNextSectionNextSectionParserRuleCall_5_0());
				}
				lv_nextSection_5_0=ruleNextSection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSectionRule());
					}
					set(
						$current,
						"nextSection",
						lv_nextSection_5_0,
						"ox.xtext.peweb.question.Q.NextSection");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSectionContents
entryRuleSectionContents returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSectionContentsRule()); }
	iv_ruleSectionContents=ruleSectionContents
	{ $current=$iv_ruleSectionContents.current; }
	EOF;

// Rule SectionContents
ruleSectionContents returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSectionContentsAccess().getQuestionParserRuleCall_0());
		}
		this_Question_0=ruleQuestion
		{
			$current = $this_Question_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSectionContentsAccess().getTitleParserRuleCall_1());
		}
		this_Title_1=ruleTitle
		{
			$current = $this_Title_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSectionContentsAccess().getDescriptionParserRuleCall_2());
		}
		this_Description_2=ruleDescription
		{
			$current = $this_Description_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTitle
entryRuleTitle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTitleRule()); }
	iv_ruleTitle=ruleTitle
	{ $current=$iv_ruleTitle.current; }
	EOF;

// Rule Title
ruleTitle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Title'
		{
			newLeafNode(otherlv_0, grammarAccess.getTitleAccess().getTitleKeyword_0());
		}
		(
			(
				lv_title_1_0=RULE_STRING
				{
					newLeafNode(lv_title_1_0, grammarAccess.getTitleAccess().getTitleSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTitleRule());
					}
					setWithLastConsumed(
						$current,
						"title",
						lv_title_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleDescription
entryRuleDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDescriptionRule()); }
	iv_ruleDescription=ruleDescription
	{ $current=$iv_ruleDescription.current; }
	EOF;

// Rule Description
ruleDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Description'
		{
			newLeafNode(otherlv_0, grammarAccess.getDescriptionAccess().getDescriptionKeyword_0());
		}
		(
			(
				lv_description_1_0=RULE_STRING
				{
					newLeafNode(lv_description_1_0, grammarAccess.getDescriptionAccess().getDescriptionSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDescriptionRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleQuestion
entryRuleQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuestionRule()); }
	iv_ruleQuestion=ruleQuestion
	{ $current=$iv_ruleQuestion.current; }
	EOF;

// Rule Question
ruleQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQuestionAccess().getMultipleChoiceQuestionParserRuleCall_0());
		}
		this_MultipleChoiceQuestion_0=ruleMultipleChoiceQuestion
		{
			$current = $this_MultipleChoiceQuestion_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQuestionAccess().getTextQuestionParserRuleCall_1());
		}
		this_TextQuestion_1=ruleTextQuestion
		{
			$current = $this_TextQuestion_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMultipleChoiceQuestion
entryRuleMultipleChoiceQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultipleChoiceQuestionRule()); }
	iv_ruleMultipleChoiceQuestion=ruleMultipleChoiceQuestion
	{ $current=$iv_ruleMultipleChoiceQuestion.current; }
	EOF;

// Rule MultipleChoiceQuestion
ruleMultipleChoiceQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MultipleChoiceQuestion'
		{
			newLeafNode(otherlv_0, grammarAccess.getMultipleChoiceQuestionAccess().getMultipleChoiceQuestionKeyword_0());
		}
		(
			(
				lv_question_1_0=RULE_STRING
				{
					newLeafNode(lv_question_1_0, grammarAccess.getMultipleChoiceQuestionAccess().getQuestionSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultipleChoiceQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"question",
						lv_question_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMultipleChoiceQuestionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMultipleChoiceQuestionAccess().getAnswersMultipleChoiceAnswerParserRuleCall_3_0());
				}
				lv_answers_3_0=ruleMultipleChoiceAnswer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultipleChoiceQuestionRule());
					}
					add(
						$current,
						"answers",
						lv_answers_3_0,
						"ox.xtext.peweb.question.Q.MultipleChoiceAnswer");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getMultipleChoiceQuestionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleMultipleChoiceAnswer
entryRuleMultipleChoiceAnswer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultipleChoiceAnswerRule()); }
	iv_ruleMultipleChoiceAnswer=ruleMultipleChoiceAnswer
	{ $current=$iv_ruleMultipleChoiceAnswer.current; }
	EOF;

// Rule MultipleChoiceAnswer
ruleMultipleChoiceAnswer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Answer'
		{
			newLeafNode(otherlv_0, grammarAccess.getMultipleChoiceAnswerAccess().getAnswerKeyword_0());
		}
		(
			(
				lv_answer_1_0=RULE_STRING
				{
					newLeafNode(lv_answer_1_0, grammarAccess.getMultipleChoiceAnswerAccess().getAnswerSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultipleChoiceAnswerRule());
					}
					setWithLastConsumed(
						$current,
						"answer",
						lv_answer_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMultipleChoiceAnswerAccess().getGotoSectionReferenceParserRuleCall_2_0());
				}
				lv_goto_2_0=ruleSectionReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultipleChoiceAnswerRule());
					}
					set(
						$current,
						"goto",
						lv_goto_2_0,
						"ox.xtext.peweb.question.Q.SectionReference");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleTextQuestion
entryRuleTextQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextQuestionRule()); }
	iv_ruleTextQuestion=ruleTextQuestion
	{ $current=$iv_ruleTextQuestion.current; }
	EOF;

// Rule TextQuestion
ruleTextQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='TextQuestion'
		{
			newLeafNode(otherlv_0, grammarAccess.getTextQuestionAccess().getTextQuestionKeyword_0());
		}
		(
			(
				lv_question_1_0=RULE_STRING
				{
					newLeafNode(lv_question_1_0, grammarAccess.getTextQuestionAccess().getQuestionSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"question",
						lv_question_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_description_2_0=RULE_STRING
				{
					newLeafNode(lv_description_2_0, grammarAccess.getTextQuestionAccess().getDescriptionSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		(
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getTextQuestionAccess().getLeftCurlyBracketKeyword_3_0());
			}
			otherlv_4='}'
			{
				newLeafNode(otherlv_4, grammarAccess.getTextQuestionAccess().getRightCurlyBracketKeyword_3_1());
			}
		)?
	)
;

// Entry rule entryRuleNextSection
entryRuleNextSection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNextSectionRule()); }
	iv_ruleNextSection=ruleNextSection
	{ $current=$iv_ruleNextSection.current; }
	EOF;

// Rule NextSection
ruleNextSection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNextSectionAccess().getSectionReferenceParserRuleCall_0());
		}
		this_SectionReference_0=ruleSectionReference
		{
			$current = $this_SectionReference_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNextSectionAccess().getEndOfQuestionnaireAction_1_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getNextSectionAccess().getEndOfQuestionnaireParserRuleCall_1_1());
			}
			ruleEndOfQuestionnaire
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSectionReference
entryRuleSectionReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSectionReferenceRule()); }
	iv_ruleSectionReference=ruleSectionReference
	{ $current=$iv_ruleSectionReference.current; }
	EOF;

// Rule SectionReference
ruleSectionReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='goto'
		{
			newLeafNode(otherlv_0, grammarAccess.getSectionReferenceAccess().getGotoKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSectionReferenceRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getSectionReferenceAccess().getSectionSectionCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleEndOfQuestionnaire
entryRuleEndOfQuestionnaire returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEndOfQuestionnaireRule()); }
	iv_ruleEndOfQuestionnaire=ruleEndOfQuestionnaire
	{ $current=$iv_ruleEndOfQuestionnaire.current.getText(); }
	EOF;

// Rule EndOfQuestionnaire
ruleEndOfQuestionnaire returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='End'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getEndOfQuestionnaireAccess().getEndKeyword());
	}
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
