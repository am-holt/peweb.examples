/*
 * generated by Xtext 2.14.0-SNAPSHOT
 */
grammar InternalQ;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package ox.xtext.peweb.question.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package ox.xtext.peweb.question.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import ox.xtext.peweb.question.services.QGrammarAccess;

}
@parser::members {
	private QGrammarAccess grammarAccess;

	public void setGrammarAccess(QGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleQuestionnaire
entryRuleQuestionnaire
:
{ before(grammarAccess.getQuestionnaireRule()); }
	 ruleQuestionnaire
{ after(grammarAccess.getQuestionnaireRule()); } 
	 EOF 
;

// Rule Questionnaire
ruleQuestionnaire 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuestionnaireAccess().getSectionsAssignment()); }
		(rule__Questionnaire__SectionsAssignment)*
		{ after(grammarAccess.getQuestionnaireAccess().getSectionsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSection
entryRuleSection
:
{ before(grammarAccess.getSectionRule()); }
	 ruleSection
{ after(grammarAccess.getSectionRule()); } 
	 EOF 
;

// Rule Section
ruleSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSectionAccess().getGroup()); }
		(rule__Section__Group__0)
		{ after(grammarAccess.getSectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSectionContents
entryRuleSectionContents
:
{ before(grammarAccess.getSectionContentsRule()); }
	 ruleSectionContents
{ after(grammarAccess.getSectionContentsRule()); } 
	 EOF 
;

// Rule SectionContents
ruleSectionContents 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSectionContentsAccess().getAlternatives()); }
		(rule__SectionContents__Alternatives)
		{ after(grammarAccess.getSectionContentsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTitle
entryRuleTitle
:
{ before(grammarAccess.getTitleRule()); }
	 ruleTitle
{ after(grammarAccess.getTitleRule()); } 
	 EOF 
;

// Rule Title
ruleTitle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTitleAccess().getGroup()); }
		(rule__Title__Group__0)
		{ after(grammarAccess.getTitleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDescription
entryRuleDescription
:
{ before(grammarAccess.getDescriptionRule()); }
	 ruleDescription
{ after(grammarAccess.getDescriptionRule()); } 
	 EOF 
;

// Rule Description
ruleDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDescriptionAccess().getGroup()); }
		(rule__Description__Group__0)
		{ after(grammarAccess.getDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuestion
entryRuleQuestion
:
{ before(grammarAccess.getQuestionRule()); }
	 ruleQuestion
{ after(grammarAccess.getQuestionRule()); } 
	 EOF 
;

// Rule Question
ruleQuestion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuestionAccess().getAlternatives()); }
		(rule__Question__Alternatives)
		{ after(grammarAccess.getQuestionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultipleChoiceQuestion
entryRuleMultipleChoiceQuestion
:
{ before(grammarAccess.getMultipleChoiceQuestionRule()); }
	 ruleMultipleChoiceQuestion
{ after(grammarAccess.getMultipleChoiceQuestionRule()); } 
	 EOF 
;

// Rule MultipleChoiceQuestion
ruleMultipleChoiceQuestion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultipleChoiceQuestionAccess().getGroup()); }
		(rule__MultipleChoiceQuestion__Group__0)
		{ after(grammarAccess.getMultipleChoiceQuestionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultipleChoiceAnswer
entryRuleMultipleChoiceAnswer
:
{ before(grammarAccess.getMultipleChoiceAnswerRule()); }
	 ruleMultipleChoiceAnswer
{ after(grammarAccess.getMultipleChoiceAnswerRule()); } 
	 EOF 
;

// Rule MultipleChoiceAnswer
ruleMultipleChoiceAnswer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultipleChoiceAnswerAccess().getGroup()); }
		(rule__MultipleChoiceAnswer__Group__0)
		{ after(grammarAccess.getMultipleChoiceAnswerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTextQuestion
entryRuleTextQuestion
:
{ before(grammarAccess.getTextQuestionRule()); }
	 ruleTextQuestion
{ after(grammarAccess.getTextQuestionRule()); } 
	 EOF 
;

// Rule TextQuestion
ruleTextQuestion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextQuestionAccess().getGroup()); }
		(rule__TextQuestion__Group__0)
		{ after(grammarAccess.getTextQuestionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNextSection
entryRuleNextSection
:
{ before(grammarAccess.getNextSectionRule()); }
	 ruleNextSection
{ after(grammarAccess.getNextSectionRule()); } 
	 EOF 
;

// Rule NextSection
ruleNextSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNextSectionAccess().getAlternatives()); }
		(rule__NextSection__Alternatives)
		{ after(grammarAccess.getNextSectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSectionReference
entryRuleSectionReference
:
{ before(grammarAccess.getSectionReferenceRule()); }
	 ruleSectionReference
{ after(grammarAccess.getSectionReferenceRule()); } 
	 EOF 
;

// Rule SectionReference
ruleSectionReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSectionReferenceAccess().getGroup()); }
		(rule__SectionReference__Group__0)
		{ after(grammarAccess.getSectionReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndOfQuestionnaire
entryRuleEndOfQuestionnaire
:
{ before(grammarAccess.getEndOfQuestionnaireRule()); }
	 ruleEndOfQuestionnaire
{ after(grammarAccess.getEndOfQuestionnaireRule()); } 
	 EOF 
;

// Rule EndOfQuestionnaire
ruleEndOfQuestionnaire 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndOfQuestionnaireAccess().getEndKeyword()); }
		'End'
		{ after(grammarAccess.getEndOfQuestionnaireAccess().getEndKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SectionContents__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionContentsAccess().getQuestionParserRuleCall_0()); }
		ruleQuestion
		{ after(grammarAccess.getSectionContentsAccess().getQuestionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSectionContentsAccess().getTitleParserRuleCall_1()); }
		ruleTitle
		{ after(grammarAccess.getSectionContentsAccess().getTitleParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSectionContentsAccess().getDescriptionParserRuleCall_2()); }
		ruleDescription
		{ after(grammarAccess.getSectionContentsAccess().getDescriptionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionAccess().getMultipleChoiceQuestionParserRuleCall_0()); }
		ruleMultipleChoiceQuestion
		{ after(grammarAccess.getQuestionAccess().getMultipleChoiceQuestionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getQuestionAccess().getTextQuestionParserRuleCall_1()); }
		ruleTextQuestion
		{ after(grammarAccess.getQuestionAccess().getTextQuestionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NextSection__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNextSectionAccess().getSectionReferenceParserRuleCall_0()); }
		ruleSectionReference
		{ after(grammarAccess.getNextSectionAccess().getSectionReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNextSectionAccess().getGroup_1()); }
		(rule__NextSection__Group_1__0)
		{ after(grammarAccess.getNextSectionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__0__Impl
	rule__Section__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getSectionKeyword_0()); }
	'Section'
	{ after(grammarAccess.getSectionAccess().getSectionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__1__Impl
	rule__Section__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getNameAssignment_1()); }
	(rule__Section__NameAssignment_1)
	{ after(grammarAccess.getSectionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__2__Impl
	rule__Section__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSectionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__3__Impl
	rule__Section__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSectionAccess().getSectionContentsAssignment_3()); }
		(rule__Section__SectionContentsAssignment_3)
		{ after(grammarAccess.getSectionAccess().getSectionContentsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getSectionAccess().getSectionContentsAssignment_3()); }
		(rule__Section__SectionContentsAssignment_3)*
		{ after(grammarAccess.getSectionAccess().getSectionContentsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__4__Impl
	rule__Section__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSectionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getNextSectionAssignment_5()); }
	(rule__Section__NextSectionAssignment_5)?
	{ after(grammarAccess.getSectionAccess().getNextSectionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Title__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Title__Group__0__Impl
	rule__Title__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTitleAccess().getTitleKeyword_0()); }
	'Title'
	{ after(grammarAccess.getTitleAccess().getTitleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Title__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTitleAccess().getTitleAssignment_1()); }
	(rule__Title__TitleAssignment_1)
	{ after(grammarAccess.getTitleAccess().getTitleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Description__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__0__Impl
	rule__Description__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getDescriptionKeyword_0()); }
	'Description'
	{ after(grammarAccess.getDescriptionAccess().getDescriptionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getDescriptionAssignment_1()); }
	(rule__Description__DescriptionAssignment_1)
	{ after(grammarAccess.getDescriptionAccess().getDescriptionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleChoiceQuestion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleChoiceQuestion__Group__0__Impl
	rule__MultipleChoiceQuestion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceQuestion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleChoiceQuestionAccess().getMultipleChoiceQuestionKeyword_0()); }
	'MultipleChoiceQuestion'
	{ after(grammarAccess.getMultipleChoiceQuestionAccess().getMultipleChoiceQuestionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceQuestion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleChoiceQuestion__Group__1__Impl
	rule__MultipleChoiceQuestion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceQuestion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleChoiceQuestionAccess().getQuestionAssignment_1()); }
	(rule__MultipleChoiceQuestion__QuestionAssignment_1)
	{ after(grammarAccess.getMultipleChoiceQuestionAccess().getQuestionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceQuestion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleChoiceQuestion__Group__2__Impl
	rule__MultipleChoiceQuestion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceQuestion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleChoiceQuestionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getMultipleChoiceQuestionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceQuestion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleChoiceQuestion__Group__3__Impl
	rule__MultipleChoiceQuestion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceQuestion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleChoiceQuestionAccess().getAnswersAssignment_3()); }
	(rule__MultipleChoiceQuestion__AnswersAssignment_3)*
	{ after(grammarAccess.getMultipleChoiceQuestionAccess().getAnswersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceQuestion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleChoiceQuestion__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceQuestion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleChoiceQuestionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getMultipleChoiceQuestionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleChoiceAnswer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleChoiceAnswer__Group__0__Impl
	rule__MultipleChoiceAnswer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceAnswer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleChoiceAnswerAccess().getAnswerKeyword_0()); }
	'Answer'
	{ after(grammarAccess.getMultipleChoiceAnswerAccess().getAnswerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceAnswer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleChoiceAnswer__Group__1__Impl
	rule__MultipleChoiceAnswer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceAnswer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleChoiceAnswerAccess().getAnswerAssignment_1()); }
	(rule__MultipleChoiceAnswer__AnswerAssignment_1)
	{ after(grammarAccess.getMultipleChoiceAnswerAccess().getAnswerAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceAnswer__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultipleChoiceAnswer__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceAnswer__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultipleChoiceAnswerAccess().getGotoAssignment_2()); }
	(rule__MultipleChoiceAnswer__GotoAssignment_2)?
	{ after(grammarAccess.getMultipleChoiceAnswerAccess().getGotoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TextQuestion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextQuestion__Group__0__Impl
	rule__TextQuestion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextQuestion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextQuestionAccess().getTextQuestionKeyword_0()); }
	'TextQuestion'
	{ after(grammarAccess.getTextQuestionAccess().getTextQuestionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextQuestion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextQuestion__Group__1__Impl
	rule__TextQuestion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextQuestion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextQuestionAccess().getQuestionAssignment_1()); }
	(rule__TextQuestion__QuestionAssignment_1)
	{ after(grammarAccess.getTextQuestionAccess().getQuestionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextQuestion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextQuestion__Group__2__Impl
	rule__TextQuestion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TextQuestion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextQuestionAccess().getDescriptionAssignment_2()); }
	(rule__TextQuestion__DescriptionAssignment_2)?
	{ after(grammarAccess.getTextQuestionAccess().getDescriptionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextQuestion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextQuestion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextQuestion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextQuestionAccess().getGroup_3()); }
	(rule__TextQuestion__Group_3__0)?
	{ after(grammarAccess.getTextQuestionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TextQuestion__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextQuestion__Group_3__0__Impl
	rule__TextQuestion__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextQuestion__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextQuestionAccess().getLeftCurlyBracketKeyword_3_0()); }
	'{'
	{ after(grammarAccess.getTextQuestionAccess().getLeftCurlyBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextQuestion__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextQuestion__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextQuestion__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextQuestionAccess().getRightCurlyBracketKeyword_3_1()); }
	'}'
	{ after(grammarAccess.getTextQuestionAccess().getRightCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NextSection__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NextSection__Group_1__0__Impl
	rule__NextSection__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NextSection__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNextSectionAccess().getEndOfQuestionnaireAction_1_0()); }
	()
	{ after(grammarAccess.getNextSectionAccess().getEndOfQuestionnaireAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NextSection__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NextSection__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NextSection__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNextSectionAccess().getEndOfQuestionnaireParserRuleCall_1_1()); }
	ruleEndOfQuestionnaire
	{ after(grammarAccess.getNextSectionAccess().getEndOfQuestionnaireParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SectionReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SectionReference__Group__0__Impl
	rule__SectionReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SectionReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionReferenceAccess().getGotoKeyword_0()); }
	'goto'
	{ after(grammarAccess.getSectionReferenceAccess().getGotoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SectionReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SectionReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SectionReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionReferenceAccess().getSectionAssignment_1()); }
	(rule__SectionReference__SectionAssignment_1)
	{ after(grammarAccess.getSectionReferenceAccess().getSectionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__SectionsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionnaireAccess().getSectionsSectionParserRuleCall_0()); }
		ruleSection
		{ after(grammarAccess.getQuestionnaireAccess().getSectionsSectionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSectionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__SectionContentsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getSectionContentsSectionContentsParserRuleCall_3_0()); }
		ruleSectionContents
		{ after(grammarAccess.getSectionAccess().getSectionContentsSectionContentsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__NextSectionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getNextSectionNextSectionParserRuleCall_5_0()); }
		ruleNextSection
		{ after(grammarAccess.getSectionAccess().getNextSectionNextSectionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__TitleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTitleAccess().getTitleSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTitleAccess().getTitleSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__DescriptionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDescriptionAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getDescriptionAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceQuestion__QuestionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleChoiceQuestionAccess().getQuestionSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getMultipleChoiceQuestionAccess().getQuestionSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceQuestion__AnswersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleChoiceQuestionAccess().getAnswersMultipleChoiceAnswerParserRuleCall_3_0()); }
		ruleMultipleChoiceAnswer
		{ after(grammarAccess.getMultipleChoiceQuestionAccess().getAnswersMultipleChoiceAnswerParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceAnswer__AnswerAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleChoiceAnswerAccess().getAnswerSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getMultipleChoiceAnswerAccess().getAnswerSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleChoiceAnswer__GotoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultipleChoiceAnswerAccess().getGotoSectionReferenceParserRuleCall_2_0()); }
		ruleSectionReference
		{ after(grammarAccess.getMultipleChoiceAnswerAccess().getGotoSectionReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextQuestion__QuestionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextQuestionAccess().getQuestionSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTextQuestionAccess().getQuestionSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextQuestion__DescriptionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextQuestionAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getTextQuestionAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SectionReference__SectionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionReferenceAccess().getSectionSectionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSectionReferenceAccess().getSectionSectionIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSectionReferenceAccess().getSectionSectionIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSectionReferenceAccess().getSectionSectionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
