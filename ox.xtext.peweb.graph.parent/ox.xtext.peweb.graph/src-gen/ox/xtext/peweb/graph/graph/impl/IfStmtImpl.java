/**
 * generated by Xtext 2.14.0-SNAPSHOT
 */
package ox.xtext.peweb.graph.graph.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import ox.xtext.peweb.graph.graph.Expr;
import ox.xtext.peweb.graph.graph.GraphPackage;
import ox.xtext.peweb.graph.graph.IfStmt;
import ox.xtext.peweb.graph.graph.Statement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>If Stmt</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ox.xtext.peweb.graph.graph.impl.IfStmtImpl#getExpr <em>Expr</em>}</li>
 *   <li>{@link ox.xtext.peweb.graph.graph.impl.IfStmtImpl#getStmts <em>Stmts</em>}</li>
 *   <li>{@link ox.xtext.peweb.graph.graph.impl.IfStmtImpl#getElseStmts <em>Else Stmts</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IfStmtImpl extends StatementImpl implements IfStmt
{
  /**
   * The cached value of the '{@link #getExpr() <em>Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpr()
   * @generated
   * @ordered
   */
  protected Expr expr;

  /**
   * The cached value of the '{@link #getStmts() <em>Stmts</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStmts()
   * @generated
   * @ordered
   */
  protected EList<Statement> stmts;

  /**
   * The cached value of the '{@link #getElseStmts() <em>Else Stmts</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseStmts()
   * @generated
   * @ordered
   */
  protected EList<Statement> elseStmts;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IfStmtImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GraphPackage.Literals.IF_STMT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expr getExpr()
  {
    return expr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpr(Expr newExpr, NotificationChain msgs)
  {
    Expr oldExpr = expr;
    expr = newExpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GraphPackage.IF_STMT__EXPR, oldExpr, newExpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpr(Expr newExpr)
  {
    if (newExpr != expr)
    {
      NotificationChain msgs = null;
      if (expr != null)
        msgs = ((InternalEObject)expr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GraphPackage.IF_STMT__EXPR, null, msgs);
      if (newExpr != null)
        msgs = ((InternalEObject)newExpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GraphPackage.IF_STMT__EXPR, null, msgs);
      msgs = basicSetExpr(newExpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GraphPackage.IF_STMT__EXPR, newExpr, newExpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Statement> getStmts()
  {
    if (stmts == null)
    {
      stmts = new EObjectContainmentEList<Statement>(Statement.class, this, GraphPackage.IF_STMT__STMTS);
    }
    return stmts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Statement> getElseStmts()
  {
    if (elseStmts == null)
    {
      elseStmts = new EObjectContainmentEList<Statement>(Statement.class, this, GraphPackage.IF_STMT__ELSE_STMTS);
    }
    return elseStmts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GraphPackage.IF_STMT__EXPR:
        return basicSetExpr(null, msgs);
      case GraphPackage.IF_STMT__STMTS:
        return ((InternalEList<?>)getStmts()).basicRemove(otherEnd, msgs);
      case GraphPackage.IF_STMT__ELSE_STMTS:
        return ((InternalEList<?>)getElseStmts()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GraphPackage.IF_STMT__EXPR:
        return getExpr();
      case GraphPackage.IF_STMT__STMTS:
        return getStmts();
      case GraphPackage.IF_STMT__ELSE_STMTS:
        return getElseStmts();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GraphPackage.IF_STMT__EXPR:
        setExpr((Expr)newValue);
        return;
      case GraphPackage.IF_STMT__STMTS:
        getStmts().clear();
        getStmts().addAll((Collection<? extends Statement>)newValue);
        return;
      case GraphPackage.IF_STMT__ELSE_STMTS:
        getElseStmts().clear();
        getElseStmts().addAll((Collection<? extends Statement>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GraphPackage.IF_STMT__EXPR:
        setExpr((Expr)null);
        return;
      case GraphPackage.IF_STMT__STMTS:
        getStmts().clear();
        return;
      case GraphPackage.IF_STMT__ELSE_STMTS:
        getElseStmts().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GraphPackage.IF_STMT__EXPR:
        return expr != null;
      case GraphPackage.IF_STMT__STMTS:
        return stmts != null && !stmts.isEmpty();
      case GraphPackage.IF_STMT__ELSE_STMTS:
        return elseStmts != null && !elseStmts.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //IfStmtImpl
